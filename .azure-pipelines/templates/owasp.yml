name: owaspzap-demo • $(TeamProject) • $(BuildDefinitionName) • $(SourceBranchName) • $(Date:yyyyMMdd)$(Rev:.r)

trigger: none

pool:
  vmImage: 'ubuntu-20.04'

stages:
  - stage: Police
    jobs:
    - job: OwaspZap
      steps:
        - bash: |
            mkdir $(Build.SourcesDirectory)/owaspzap
            chmod 777 $(Build.SourcesDirectory)/owaspzap
            docker run -v $(Build.SourcesDirectory)/owaspzap:/zap/wrk/:rw owasp/zap2docker-weekly zap-baseline.py -t https://stockholmkiteboard.se:443 -J zap_report.json -r zap_report.html
            echo $?
          displayName: Zap Baseline
          workingDirectory:  $(Build.SourcesDirectory)

        - bash: |
            npm install handlebars-cmd
          displayName: Install tooling

        - bash: |
            'handlebars owaspzap/zap_report.json <script/owasp2nunit.hbs>  owaspzap/results.xml'
          displayName: Nunit report

        - task: PublishTestResults@2
          displayName: 'Publish Test Results owasp/results.xml'
          inputs:
            testResultsFormat: NUnit
            testResultsFiles: 'owaspzap/results.xml'

        - task: CopyFiles@2
          displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
          inputs:
            SourceFolder:   '$(Build.SourcesDirectory)/owaspzap/'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact: zap-scanner-reports'
          inputs:
            ArtifactName: 'zap-scanner-reports'
